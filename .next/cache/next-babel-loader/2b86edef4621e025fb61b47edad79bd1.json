{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\reactprojects\\\\nexttry1\\\\src\\\\components\\\\accordion\\\\accordion.js\";\nvar _excluded = [\"items\"];\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BaseAccordion } from './base-accordion';\nimport { AccordionButton, AccordionItem, AccordionContents, single, preventClose, combineReducers } from './shared';\nexport default function Accordion(_ref) {\n  var _this = this;\n\n  var items = _ref.items,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(BaseAccordion, _extends({\n    stateReducer: combineReducers(single, preventClose)\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), function (_ref2) {\n    var openIndexes = _ref2.openIndexes,\n        handleItemClick = _ref2.handleItemClick;\n    return __jsx(React.Fragment, null, items.map(function (item, index) {\n      return __jsx(AccordionItem, {\n        key: item.title,\n        isOpen: openIndexes.includes(index),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, __jsx(AccordionButton, {\n        onClick: function onClick() {\n          return handleItemClick(index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }, __jsx(\"span\", {\n        className: openIndexes.includes(index) ? 'open' : 'closed',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }), item.title), __jsx(AccordionContents, {\n        isOpen: openIndexes.includes(index),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, item.contents));\n    }));\n  });\n}\n_c = Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["C:/reactprojects/nexttry1/src/components/accordion/accordion.js"],"names":["React","BaseAccordion","AccordionButton","AccordionItem","AccordionContents","single","preventClose","combineReducers","Accordion","items","props","openIndexes","handleItemClick","map","item","index","title","includes","contents"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,iBAHF,EAIEC,MAJF,EAKEC,YALF,EAMEC,eANF,QAOO,UAPP;AASA,eAAe,SAASC,SAAT,OAAwC;AAAA;;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAATC,KAAS;;AACrD,SACE,MAAC,aAAD;AACE,IAAA,YAAY,EAAEH,eAAe,CAACF,MAAD,EAASC,YAAT;AAD/B,KAEMI,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIG;AAAA,QAAGC,WAAH,SAAGA,WAAH;AAAA,QAAgBC,eAAhB,SAAgBA,eAAhB;AAAA,WACC,4BACGH,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,aACT,MAAC,aAAD;AACE,QAAA,GAAG,EAAED,IAAI,CAACE,KADZ;AAEE,QAAA,MAAM,EAAEL,WAAW,CAACM,QAAZ,CAAqBF,KAArB,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,MAAC,eAAD;AAAiB,QAAA,OAAO,EAAE;AAAA,iBAAMH,eAAe,CAACG,KAAD,CAArB;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAEJ,WAAW,CAACM,QAAZ,CAAqBF,KAArB,IAA8B,MAA9B,GAAuC,QADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIGD,IAAI,CAACE,KAJR,CAJF,EAUE,MAAC,iBAAD;AAAmB,QAAA,MAAM,EAAEL,WAAW,CAACM,QAAZ,CAAqBF,KAArB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACI,QADR,CAVF,CADS;AAAA,KAAV,CADH,CADD;AAAA,GAJH,CADF;AA2BD;KA5BuBV,S","sourcesContent":["import React from 'react';\r\nimport { BaseAccordion } from './base-accordion';\r\nimport {\r\n  AccordionButton,\r\n  AccordionItem,\r\n  AccordionContents,\r\n  single,\r\n  preventClose,\r\n  combineReducers,\r\n} from './shared';\r\n\r\nexport default function Accordion({ items, ...props }) {\r\n  return (\r\n    <BaseAccordion\r\n      stateReducer={combineReducers(single, preventClose)}\r\n      {...props}\r\n    >\r\n      {({ openIndexes, handleItemClick }) => (\r\n        <>\r\n          {items.map((item, index) => (\r\n            <AccordionItem\r\n              key={item.title}\r\n              isOpen={openIndexes.includes(index)}\r\n            >\r\n              <AccordionButton onClick={() => handleItemClick(index)}>\r\n                <span\r\n                  className={openIndexes.includes(index) ? 'open' : 'closed'}\r\n                ></span>\r\n                {item.title}\r\n              </AccordionButton>\r\n              <AccordionContents isOpen={openIndexes.includes(index)}>\r\n                {item.contents}\r\n              </AccordionContents>\r\n            </AccordionItem>\r\n          ))}\r\n        </>\r\n      )}\r\n    </BaseAccordion>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}